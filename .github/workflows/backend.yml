name: Backend Build & Push

on:
  push:
    branches: [main]
    paths:
      - 'code/backend1/src/**'
      - 'code/backend2/src/**'
  pull_request:
    branches: [main, dev]
    paths:
      - 'code/backend1/src/**'
      - 'code/backend2/src/**'

permissions:
  contents: write

env:
  DOCKERHUB_USER: suzal777

jobs:
  check-backend-change:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.filter.outputs.backend == 'true' }}
      backend1_changed: ${{ steps.filter.outputs.backend1 == 'true' }}
      backend2_changed: ${{ steps.filter.outputs.backend2 == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect Backend Changes
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            backend:
              - 'code/backend1/**'
              - 'code/backend2/**'
            backend1:
              - 'code/backend1/**'
            backend2:
              - 'code/backend2/**'

  check-dev-merge:
    runs-on: ubuntu-latest
    needs: check-backend-change
    if: |
      github.ref == 'refs/heads/main' &&
      needs.check-backend-change.outputs.changed == 'true'
    outputs:
      is_dev_merge: ${{ steps.check-merge.outputs.is_dev_merge }}
    steps:
      - name: Check if merge from dev
        id: check-merge
        run: |
          if [ "${{ github.event_name }}" = "push" ] && 
             [ "${{ github.ref }}" = "refs/heads/main" ]; then
            echo "is_dev_merge=true" >> $GITHUB_OUTPUT
          else
            echo "is_dev_merge=false" >> $GITHUB_OUTPUT
          fi

  pr-checks:
    name: PR Research Checks
    runs-on: ubuntu-latest
    needs: check-backend-change
    if: |
      needs.check-backend-change.outputs.changed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache node modules (backend1)
        if: needs.check-backend-change.outputs.backend1_changed == 'true'
        uses: actions/cache@v3
        with:
          path: code/backend1/node_modules
          key: ${{ runner.os }}-backend1-node-${{ hashFiles('code/backend1/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-backend1-node-

      - name: Cache node modules (backend2)
        if: needs.check-backend-change.outputs.backend2_changed == 'true'
        uses: actions/cache@v3
        with:
          path: code/backend2/node_modules
          key: ${{ runner.os }}-backend2-node-${{ hashFiles('code/backend2/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-backend2-node-

      - name: Install TSLint
        run: npm install -g tslint typescript

      - name: Run TSLint (backend1)
        if: needs.check-backend-change.outputs.backend1_changed == 'true'
        working-directory: ./code/backend1
        run: |
          yarn install --frozen-lockfile
          tslint -c tslint.json 'src/**/*.{ts,js}' 'test/**/*.{ts,js}' || exit 1

      - name: Run TSLint (backend2)
        if: needs.check-backend-change.outputs.backend2_changed == 'true'
        working-directory: ./code/backend2
        run: |
          yarn install --frozen-lockfile
          tslint -c tslint.json 'src/**/*.{ts,js}' 'test/**/*.{ts,js}' || exit 1

  build-and-push-backend-dev:
    runs-on: [backend]
    needs: [check-backend-change, pr-checks, check-dev-merge]
    if: |
      needs.check-backend-change.outputs.changed == 'true' &&
      (github.event_name != 'pull_request' || needs.pr-checks.result == 'success') &&
      github.ref != 'refs/heads/main'
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Docker login
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and Push Backend1
        if: needs.check-backend-change.outputs.backend1_changed == 'true'
        run: |
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          BRANCH_NAME=$(echo $GITHUB_REF_NAME | tr '/' '-')
          
            docker build \
              -t $DOCKERHUB_USER/backend1:$BRANCH_NAME-$SHORT_SHA \
              ./code/backend1
            docker push $DOCKERHUB_USER/backend1:$BRANCH_NAME-$SHORT_SHA
          
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and Push Backend2
        if: needs.check-backend-change.outputs.backend2_changed == 'true'
        run: |
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          BRANCH_NAME=$(echo $GITHUB_REF_NAME | tr '/' '-')
          
            docker build \
              -t $DOCKERHUB_USER/backend2:$BRANCH_NAME-$SHORT_SHA \
              ./code/backend2
            docker push $DOCKERHUB_USER/backend2:$BRANCH_NAME-$SHORT_SHA
          
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker logout
        if: always()
        run: docker logout

  build-and-push-backend-main:
    runs-on: [ubuntu-latest]
    needs: [pr-checks, check-dev-merge, check-backend-change]
    if: |
      github.ref == 'refs/heads/main' &&
      needs.check-dev-merge.outputs.is_dev_merge == 'true'
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Docker login
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
      
      - name: Get Semantic Version Backend1
        if: needs.check-backend-change.outputs.backend1_changed == 'true'
        id: semver_backend-1
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: "main"
          tag_prefix: "backend1-v"
          create_annotated_tag: true
          dry_run: false
          default_bump: "patch"

      - name: Get Semantic Version Backend2
        if: needs.check-backend-change.outputs.backend2_changed == 'true'
        id: semver_backend-2
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          release_branches: "main"
          tag_prefix: "backend2-v"
          create_annotated_tag: true
          dry_run: false
          default_bump: "patch"    

      - name: Build and Push Backend1
        if: needs.check-backend-change.outputs.backend1_changed == 'true'
        env:
          VERSION: ${{ steps.semver_backend-1.outputs.new_tag }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ -z "$VERSION" ]]; then
            echo "ERROR: Version not determined!"
            exit 1
          fi

          echo "Building version: $VERSION"

            docker build \
              -t $DOCKERHUB_USER/backend1:latest \
              -t $DOCKERHUB_USER/backend1:$VERSION \
              ./code/backend1
            docker push $DOCKERHUB_USER/backend1:latest
            docker push $DOCKERHUB_USER/backend1:$VERSION

          BACKEND2_CHANGED="${{ needs.check-backend-change.outputs.backend2_changed }}"
          CHANGED="${{ needs.check-backend-change.outputs.changed }}"

          if [[ "$BACKEND2_CHANGED" == "false" || "$CHANGED" == "true" ]]; then
            gh release create v$VERSION \
              --title "Backend1 Release v$VERSION" \
              --notes "Production release from dev merge" \
              --target main
          fi  

      - name: Build and Push Backend2
        if: needs.check-backend-change.outputs.backend2_changed == 'true'
        env:
          VERSION: ${{ steps.semver_backend-2.outputs.new_tag }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          if [[ -z "$VERSION" ]]; then
            echo "ERROR: Version not determined!"
            exit 1
          fi

          echo "Building version: $VERSION"

            docker build \
              -t $DOCKERHUB_USER/backend2:latest \
              -t $DOCKERHUB_USER/backend2:$VERSION \
              ./code/backend2
            docker push $DOCKERHUB_USER/backend2:latest
            docker push $DOCKERHUB_USER/backend2:$VERSION
            
          BACKEND1_CHANGED="${{ needs.check-backend-change.outputs.backend1_changed }}"
          CHANGED="${{ needs.check-backend-change.outputs.changed }}"

          if [[ "$BACKEND1_CHANGED" == "false" || "$CHANGED" == "true" ]]; then
            gh release create v$VERSION \
              --title "Backend2 Release v$VERSION" \
              --notes "Production release from dev merge" \
              --target main
          fi 

      - name: Set up Trivy
        uses: aquasecurity/setup-trivy@v0.2.0
        with:
          version: v0.64.1

      - name: Download Trivy HTML template
        run: curl -sSL -o html.tpl https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/html.tpl

      - name: Run Trivy Scan on Backend1 Image
        env:
          DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USERNAME }}
        run: |
          mkdir -p security/reports/backend1
          IMAGE="$DOCKERHUB_USER/backend1:latest"

          echo "Scanning image: $IMAGE"
          trivy image \
            --format template \
            --template @html.tpl \
            -o security/reports/backend1/trivy-latest.html \
            $IMAGE

      - name: Run Trivy Scan on Backend2 Image
        env:
          DOCKERHUB_USER: ${{ secrets.DOCKERHUB_USERNAME }}
        run: |
          mkdir -p security/reports/backend2
          IMAGE="$DOCKERHUB_USER/backend2:latest"

          echo "Scanning image: $IMAGE"
          trivy image \
            --format template \
            --template @html.tpl \
            -o security/reports/backend2/trivy-latest.html \
            $IMAGE

      - name: Commit Trivy Reports to gh-pages Branch
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"

          cp security/reports/backend1/trivy-latest.html /tmp/backend1-trivy-latest.html
          cp security/reports/backend2/trivy-latest.html /tmp/backend2-trivy-latest.html

          git stash push --include-untracked -m "stash before switching to gh-pages"

          git checkout gh-pages

          mkdir -p backend1
          mkdir -p backend2

          cp /tmp/backend1-trivy-latest.html backend1/trivy-latest.html
          cp /tmp/backend2-trivy-latest.html backend2/trivy-latest.html

          git add -f backend1/trivy-latest.html backend2/trivy-latest.html
          git commit -m "chore: update backend1 and backend2 Trivy reports" || echo "No changes to commit"
          git push https://x-access-token:${GH_TOKEN}@github.com/${{ github.repository }} HEAD:gh-pages

          git checkout -

          git stash pop || echo "No stash to pop"      

      - name: Docker logout
        if: always()
        run: docker logout      

  deploy-backend1:
    runs-on: [ubuntu-latest]
    needs: [build-and-push-backend-main, check-backend-change]
    if: needs.check-backend-change.outputs.backend1_changed == 'true'
    steps:
      - name: deploy-backend1
        run : |   
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > key
            chmod 600 key

            ssh -i key -o StrictHostKeyChecking=no ${{ secrets.SSH_USER_NAME }}@${{ secrets.SSH_HOST }} << 'EOF'
              cd /home/ec2-user/production
              docker compose pull backend1
              docker compose --profile backend1 up -d
            EOF

  deploy-backend2:
    runs-on: [ubuntu-latest]
    needs: [build-and-push-backend-main, check-backend-change]
    if: needs.check-backend-change.outputs.backend2_changed == 'true'
    steps:
      - name: deploy-backend2
        run : |   
            echo "${{ secrets.SSH_PRIVATE_KEY }}" > key
            chmod 600 key
            ssh -i key -o StrictHostKeyChecking=no ${{ secrets.SSH_USER_NAME }}@${{ secrets.SSH_HOST }} << 'EOF'
              cd /home/ec2-user/production
              docker compose pull backend2
              docker compose --profile backend2 up -d  
            EOF          