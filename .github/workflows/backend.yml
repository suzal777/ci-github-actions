name: Backend Build & Push

on:
  push:
    branches: [main, dev]
    paths:
      - 'code/backend1/**'
      - 'code/backend2/**'
  pull_request:
    branches: [dev]
    paths:
      - 'code/backend1/**'
      - 'code/backend2/**'

env:
  DOCKERHUB_USER: suzal777
  VERSION: 1.0.0

jobs:
  check-backend-change:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.filter.outputs.backend == 'true' }}
      backend1_changed: ${{ steps.filter.outputs.backend1 == 'true' }}
      backend2_changed: ${{ steps.filter.outputs.backend2 == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect Backend Changes
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            backend:
              - 'code/backend1/**'
              - 'code/backend2/**'
            backend1:
              - 'code/backend1/**'
            backend2:
              - 'code/backend2/**'

  pr-checks:
    name: PR Research Checks
    runs-on: ubuntu-latest
    needs: check-backend-change
    if: |
      needs.check-backend-change.outputs.changed == 'true' &&
      (github.event_name == 'pull_request' && startsWith(github.head_ref, 'feature/'))
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache node modules (backend1)
        if: needs.check-backend-change.outputs.backend1_changed == 'true'
        uses: actions/cache@v3
        with:
          path: code/backend1/node_modules
          key: ${{ runner.os }}-backend1-node-${{ hashFiles('code/backend1/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-backend1-node-

      - name: Cache node modules (backend2)
        if: needs.check-backend-change.outputs.backend2_changed == 'true'
        uses: actions/cache@v3
        with:
          path: code/backend2/node_modules
          key: ${{ runner.os }}-backend2-node-${{ hashFiles('code/backend2/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-backend2-node-

      - name: Install TSLint
        run: npm install -g tslint typescript

      - name: Run TSLint (backend1)
        if: needs.check-backend-change.outputs.backend1_changed == 'true'
        working-directory: ./code/backend1
        run: |
          yarn install --frozen-lockfile
          tslint -c tslint.json 'src/**/*.{ts,js}' 'test/**/*.{ts,js}' || exit 1

      - name: Run TSLint (backend2)
        if: needs.check-backend-change.outputs.backend2_changed == 'true'
        working-directory: ./code/backend2
        run: |
          yarn install --frozen-lockfile
          tslint -c tslint.json 'src/**/*.{ts,js}' 'test/**/*.{ts,js}' || exit 1

  build-and-push-backend:
    runs-on: [backend]
    needs: 
      - check-backend-change
      - pr-checks
    if: |
      needs.check-backend-change.outputs.changed == 'true' &&
      (github.event_name != 'pull_request' || needs.pr-checks.result == 'success')

    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Docker login
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and Push Backend1
        if: needs.check-backend-change.outputs.backend1_changed == 'true'
        run: |
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          BRANCH_NAME=$(echo $GITHUB_REF_NAME | tr '/' '-')
          if [[ "$GITHUB_REF_NAME" == "main" ]]; then
            docker build -t $DOCKERHUB_USER/backend1:latest -t $DOCKERHUB_USER/backend1:v${VERSION} ./code/backend1
            docker push $DOCKERHUB_USER/backend1:latest
            docker push $DOCKERHUB_USER/backend1:v${VERSION}
          else
            docker build -t $DOCKERHUB_USER/backend1:$BRANCH_NAME-$SHORT_SHA ./code/backend1
            docker push $DOCKERHUB_USER/backend1:$BRANCH_NAME-$SHORT_SHA
          fi

      - name: Build and Push Backend2
        if: needs.check-backend-change.outputs.backend2_changed == 'true'
        run: |
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          BRANCH_NAME=$(echo $GITHUB_REF_NAME | tr '/' '-')
          if [[ "$GITHUB_REF_NAME" == "main" ]]; then
            docker build -t $DOCKERHUB_USER/backend2:latest -t $DOCKERHUB_USER/backend2:v${VERSION} ./code/backend2
            docker push $DOCKERHUB_USER/backend2:latest
            docker push $DOCKERHUB_USER/backend2:v${VERSION}
          else
            docker build -t $DOCKERHUB_USER/backend2:$BRANCH_NAME-$SHORT_SHA ./code/backend2
            docker push $DOCKERHUB_USER/backend2:$BRANCH_NAME-$SHORT_SHA
          fi

      - name: Docker logout
        if: always()
        run: docker logout