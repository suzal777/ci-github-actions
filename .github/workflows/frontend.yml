name: Frontend Build & Push

on:
  push:
    branches: [main, dev]
    paths:
      - 'code/frontend/src/**'
  pull_request:
    branches: [main, dev]
    paths:
      - 'code/frontend/src/**'

env:
  DOCKERHUB_USER: suzal777

jobs:
  check-frontend-change:
    runs-on: ubuntu-latest
    outputs:
      changed: ${{ steps.filter.outputs.frontend == 'true' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect Frontend Changes
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            frontend:
              - 'code/frontend/**'

  check-dev-merge:
    runs-on: ubuntu-latest
    needs: check-frontend-change
    if: |
      github.ref == 'refs/heads/main' &&
      needs.check-frontend-change.outputs.changed == 'true'
    outputs:
      is_dev_merge: ${{ steps.check-merge.outputs.is_dev_merge }}
    steps:
      - name: Check if merge from dev
        id: check-merge
        run: |
          if [ "${{ github.event_name }}" = "push" ] && \
             [ "$(git log -1 --pretty=format:'%p' | wc -w)" -eq 2 ] && \
             git merge-base --is-ancestor dev ${{ github.sha }}; then
            echo "is_dev_merge=true" >> $GITHUB_OUTPUT
          else
            echo "is_dev_merge=false" >> $GITHUB_OUTPUT
          fi

  determine-version:
    runs-on: ubuntu-latest
    needs: [check-frontend-change, check-dev-merge]
    if: |
      needs.check-frontend-change.outputs.changed == 'true' &&
      needs.check-dev-merge.outputs.is_dev_merge == 'true'
    outputs:
      semver: ${{ steps.semver.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get Semantic Version
        id: semver
        uses: mathieudutour/github-tag-action@v6
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_version: "1.0.0"
          release_branches: "main"
          tag_prefix: "v"

  pr-checks:
    name: PR Research Checks
    runs-on: ubuntu-latest
    needs: check-frontend-change
    if: |
      needs.check-frontend-change.outputs.changed == 'true'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Cache node modules
        uses: actions/cache@v3
        with:
          path: |
            code/frontend/node_modules
            code/frontend/.yarn/cache
          key: ${{ runner.os }}-frontend-${{ hashFiles('code/frontend/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-frontend-

      - name: Install ESLint
        run: npm install -g eslint

      - name: Run ESLint (frontend)
        working-directory: ./code/frontend
        run: |
          yarn install --frozen-lockfile
          yarn lint

  build-and-push-frontend-dev:
    runs-on: [frontend]
    needs: [check-frontend-change, pr-checks]
    if: |
      needs.check-frontend-change.outputs.changed == 'true' &&
      (github.event_name != 'pull_request' || needs.pr-checks.result == 'success')
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Docker login
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and Push Frontend
        run: |
          SHORT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          BRANCH_NAME=$(echo $GITHUB_REF_NAME | tr '/' '-')
          
            docker build \
              --build-arg VITE_CLERK_PUBLISHABLE_KEY=${{ secrets.VITE_CLERK_PUBLISHABLE_KEY }} \
              -t $DOCKERHUB_USER/frontend:$BRANCH_NAME-$SHORT_SHA \
              ./code/frontend
            docker push $DOCKERHUB_USER/frontend:$BRANCH_NAME-$SHORT_SHA
            
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker logout
        if: always()
        run: docker logout

  build-and-push-frontend-main:
    runs-on: [frontend]
    needs: [check-frontend-change, pr-checks, check-dev-merge, determine-version]
    if: |
      needs.check-frontend-change.outputs.changed == 'true' &&
      (github.event_name != 'pull_request' || needs.pr-checks.result == 'success')
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Docker login
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Build and Push Frontend
        run: |
          if [[ "$GITHUB_REF_NAME" == "main" ]]; then
            if [[ "${{ needs.check-dev-merge.outputs.is_dev_merge }}" == "true" ]]; then
              # Case 1: Devâ†’Main merge (SemVer release)
              VERSION=${{ needs.determine-version.outputs.semver }}
              docker build \
                --build-arg VITE_CLERK_PUBLISHABLE_KEY=${{ secrets.VITE_CLERK_PUBLISHABLE_KEY }} \
                -t $DOCKERHUB_USER/frontend:latest \
                -t $DOCKERHUB_USER/frontend:$VERSION \
                ./code/frontend
              docker push $DOCKERHUB_USER/frontend:latest
              docker push $DOCKERHUB_USER/frontend:$VERSION
              
              # Create GitHub release
              gh release create v$VERSION \
                --title "Release v$VERSION" \
                --notes "Production release" \
                --target main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker logout
        if: always()
        run: docker logout      